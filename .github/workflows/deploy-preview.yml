name: Deploy Preview

on:
  # For development branch pushes, depend on CI workflow
  workflow_run:
    workflows: ["CI - Build and Test"]
    types:
      - completed
    branches: [ development ]
  # For pull requests, run directly (CI doesn't run on PRs)
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  issues: write
  pull-requests: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: preview
    # Run if:
    # 1. CI workflow succeeded (for development branch)
    # 2. Pull request event (CI doesn't run on PRs)
    # 3. Manual dispatch
    # 4. Ensure it's from the same repository for PRs
    if: |
      (github.event.workflow_run.conclusion == 'success') ||
      (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) ||
      (github.event_name == 'workflow_dispatch')
    concurrency:
      group: preview-${{ github.ref }}
      cancel-in-progress: true
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # For workflow_run events, we need to checkout the correct ref
        with:
          ref: ${{ github.event.workflow_run.head_sha || github.ref }}
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      # Only run build/test steps for pull requests (since CI doesn't run on PRs)
      - name: Run type check
        if: github.event_name == 'pull_request'
        run: npm run type-check
        
      - name: Run linting
        if: github.event_name == 'pull_request'
        run: npm run lint
        
      - name: Run tests
        if: github.event_name == 'pull_request'
        run: npm run test:run
        
      - name: Build project
        run: npm run build
        
      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        id: vercel-deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          
      - name: Comment PR with preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo, number } = context.issue;
            const previewUrl = '${{ steps.vercel-deploy.outputs.preview-url }}';
            
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: `ðŸš€ **Preview deployment ready!**\n\n**Preview URL:** ${previewUrl}\n\nDeployed from commit: ${context.sha.substring(0, 7)}`
            });